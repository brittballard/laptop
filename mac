#!/bin/sh

# shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

HOMEBREW_PREFIX="/usr/local"

fancy_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\n$fmt\n" "$@"
}

if [ -d "$HOMEBREW_PREFIX" ]; then
  if ! [ -r "$HOMEBREW_PREFIX" ]; then
    sudo chown -R "$LOGNAME:admin" /usr/local
  fi
else
  sudo mkdir "$HOMEBREW_PREFIX"
  sudo chflags norestricted "$HOMEBREW_PREFIX"
  sudo chown -R "$LOGNAME:admin" "$HOMEBREW_PREFIX"
fi

update_shell() {
  local shell_path;
  shell_path="$(which zsh)"

  fancy_echo "Changing your shell to zsh ..."
  if ! grep "$shell_path" /etc/shells > /dev/null 2>&1 ; then
    fancy_echo "Adding '$shell_path' to /etc/shells"
    sudo sh -c "echo $shell_path >> /etc/shells"
  fi
  chsh -s "$shell_path"
}

case "$SHELL" in
  */zsh)
    if [ "$(which zsh)" != "$HOMEBREW_PREFIX/bin/zsh" ] ; then
      update_shell
    fi
    ;;
  *)
    update_shell
    ;;
esac

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby

    export PATH="/usr/local/bin:$PATH"
fi

fancy_echo "Updating Homebrew formulae ..."
brew update
brew bundle --file=- <<EOF
tap "thoughtbot/formulae"
tap "homebrew/services"
tap "universal-ctags/universal-ctags"

# Unix
brew "universal-ctags", args: ["HEAD"]
brew "git"
brew "openssl"
brew "rcm"
brew "reattach-to-user-namespace"
brew "shellcheck"
brew "the_silver_searcher"
brew "tmux"
brew "vim"
brew "watch"
brew "watchman"
brew "zsh"
cask "ngrok"

# Heroku
brew "heroku"
brew "parity"

# GitHub
brew "hub"

# Image manipulation
brew "imagemagick"

# Testing
brew "chromedriver", restart_service: :changed

# Programming languages and package managers
brew "libyaml" # should come after openssl
brew "node"
brew "yarn"
brew "go"

# Databases
brew "postgres", restart_service: :changed
brew "redis", restart_service: :changed

# Data interchange
brew "protobuf"
EOF

fancy_echo "Set up Expo tools for React Native ..."
rm -rf /Applications/Expo\ XDE.app
brew cask install --force expo-xde

fancy_echo "Update Heroku binary..."
brew unlink heroku
brew link --force heroku

fancy_echo "Upgrading Homebrew formulae ..."
brew upgrade

fancy_echo "Cleaning up old Homebrew formulae ..."
brew cleanup
brew cask cleanup

fancy_echo "Installing ASDF version manager..."
if [ ! -d "$HOME/.asdf" ]; then
  git clone https://github.com/asdf-vm/asdf.git "$HOME/.asdf" --branch v0.4.0
fi

if [ ! -d "$HOME/.asdf/installs" ]; then
  mkdir ~/.asdf/installs/
fi

if [ -d "$HOME/.rbenv" ]; then
  fancy_echo "Migrating rbenv to ASDF..."

  if [ -d "$HOME/.rbenv/versions" ]; then
    mv "$HOME/.rbenv/versions" "$HOME/.asdf/installs/ruby/"
  fi

  if brew list | grep -Fq rbenv; then
    brew uninstall rbenv
  fi

  if brew list | grep -Fq ruby-build; then
    brew uninstall ruby-build
  fi

  rm -rf "$HOME/.rbenv"
fi

source "$HOME/.asdf/asdf.sh"

asdf_plugin_add() {
  local name="$1"

  if ! asdf plugin-list | grep -Fq "$name"; then
    asdf plugin-add "$name"
  fi
}

asdf_install() {
  local language="$1"
  local version="$2"

  if ! asdf list "$language" | grep -Fq "$version"; then
    asdf install "$language" "$version"
  fi
}

fancy_echo "Installing Ruby versions..."
asdf_plugin_add "ruby"
asdf_install "ruby" "2.4.2"

fancy_echo "Upgrade NPM ..."
npm install npm --global

fancy_echo "Install Prettier for auto JavaScript formatting on file save ..."
npm install prettier --global

fancy_echo "Install CLIs for React Native ..."
npm install exp --global

fancy_echo "Install Protobuf protocol compiler plugin for Go ..."
go get -u github.com/golang/protobuf/protoc-gen-go

if [ -r "$HOME/.rcrc" ]; then
  fancy_echo "Updating dotfiles ..."
  rcup
else
  env RCRC="$HOME/src/github.com/croaky/dotfiles/rcrc rcup"
fi
