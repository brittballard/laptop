#!/bin/sh

# shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

HOMEBREW_PREFIX="/usr/local"

if [ -d "$HOMEBREW_PREFIX" ]; then
  if ! [ -r "$HOMEBREW_PREFIX" ]; then
    sudo chown -R "$LOGNAME:admin" /usr/local
  fi
else
  sudo mkdir "$HOMEBREW_PREFIX"
  sudo chflags norestricted "$HOMEBREW_PREFIX"
  sudo chown -R "$LOGNAME:admin" "$HOMEBREW_PREFIX"
fi

update_shell() {
  local shell_path;
  shell_path="$(which zsh)"

  printf "\nChanging your shell to zsh ...\n"
  if ! grep "$shell_path" /etc/shells > /dev/null 2>&1 ; then
    printf "\nAdding '$shell_path' to /etc/shells\n"
    sudo sh -c "echo $shell_path >> /etc/shells"
  fi
  chsh -s "$shell_path"
}

case "$SHELL" in
  */zsh)
    if [ "$(which zsh)" != "$HOMEBREW_PREFIX/bin/zsh" ] ; then
      update_shell
    fi
    ;;
  *)
    update_shell
    ;;
esac

if ! command -v brew >/dev/null; then
  printf "\nInstalling Homebrew ...\n"
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby

    export PATH="/usr/local/bin:$PATH"
fi

printf "\nUpdating Homebrew formulae ...\n"
brew update
brew bundle --file=- <<EOF
tap "thoughtbot/formulae"
tap "homebrew/services"
tap "universal-ctags/universal-ctags"

# Unix
brew "universal-ctags", args: ["HEAD"]
brew "git"
brew "openssl"
brew "rcm"
brew "reattach-to-user-namespace"
brew "shellcheck"
brew "the_silver_searcher"
brew "tmux"
brew "vim"
brew "watch"
brew "watchman"
brew "zsh"
cask "ngrok"

# Heroku
brew "heroku"
brew "parity"

# GitHub
brew "hub"

# Image manipulation
brew "imagemagick"

# Testing
brew "chromedriver", restart_service: :changed

# Programming languages and package managers
brew "libyaml" # should come after openssl
brew "yarn"
brew "go"

# Databases
brew "postgres", restart_service: :changed
brew "redis", restart_service: :changed

# Data interchange
brew "protobuf"
EOF

if [ ! -d "/Applications/Expo XDE.app" ]; then
  printf "\nSet up Expo tools for React Native ...\n"
  brew cask install --force expo-xde
fi

printf "\nUpdate Heroku binary...\n"
brew unlink heroku
brew link --force heroku

printf "\nUpgrading Homebrew formulae ...\n"
brew upgrade

printf "Cleaning up old Homebrew formulae ...\n"
brew cleanup
brew cask cleanup

printf "\nInstalling ASDF version manager ...\n"
if [ ! -d "$HOME/.asdf" ]; then
  git clone https://github.com/asdf-vm/asdf.git "$HOME/.asdf" --branch v0.4.0
fi

. "$HOME/.asdf/asdf.sh"

asdf_plugin_add() {
  local name="$1"

  if ! asdf plugin-list | grep -Fq "$name"; then
    asdf plugin-add "$name"
  fi
}

asdf_install() {
  local language="$1"
  local version="$2"

  if ! asdf list "$language" | grep -Fq "$version"; then
    asdf install "$language" "$version"
    asdf global "$language" "$version"
  fi
}

printf "\nInstalling Ruby versions ...\n"
asdf_plugin_add "ruby"
asdf_install "ruby" "2.4.2"

printf "\nInstalling Node ...\n"
asdf_plugin_add "nodejs"
export NODEJS_CHECK_SIGNATURES=no
asdf_install "nodejs" "8.2.1"

printf "\nInstall Prettier for auto JavaScript formatting on file save ...\n"
npm install prettier --global

printf "\nInstall CLIs for React Native ...\n"
npm install exp --global

printf "\nInstall Protobuf protocol compiler plugin for Go ...\n"
go get -u github.com/golang/protobuf/protoc-gen-go

if [ -r "$HOME/.rcrc" ]; then
  printf "\nUpdating dotfiles ...\n"
  rcup
else
  env RCRC="$HOME/src/github.com/croaky/dotfiles/rcrc rcup"
fi
