" Don't highlight tabs in Go files
autocmd BufRead,BufNewFile *.go setlocal nolist ft=go

" Run current Go file
au FileType go nmap <Leader>r <Plug>(go-run)

" Run Go test suite
au FileType go nmap <Leader>t <Plug>(go-test)

" Run test for specific function under cursor
au FileType go nmap <Leader>s <Plug>(go-test-func)

" Rename the identifier under cursor
au FileType go nmap <Leader>re <Plug>(go-rename)

" Toggle test coverage
autocmd FileType go nmap <Leader>c <Plug>(go-coverage-toggle)

" Open Go definition in a vertical split
au FileType go nmap <Leader>d <Plug>(go-def-vertical)

" List interfaces for the type under cursor
au FileType go nmap <Leader>i <Plug>(go-implements)

" Run :GoBuild or :GoTestCompile based on the go file
function! s:build_go_files()
  let l:file = expand('%')
  if l:file =~# '^\f\+_test\.go$'
    call go#cmd#Test(0, 1)
  elseif l:file =~# '^\f\+\.go$'
    call go#cmd#Build(0)
  endif
endfunction

autocmd FileType go nmap <leader>b :<C-u>call <SID>build_go_files()<CR>

" Syntax highlight additional Go tokens
let g:go_auto_sameids = 1
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_operators = 1
let g:go_highlight_structs = 1

" Alias :GoAlternate to :A
autocmd Filetype go command! -bang A call go#alternate#Switch(<bang>0, 'edit')

" Bind K to grep word under cursor
nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

" Enable Emmet just for HTML/CSS/ERB
let g:user_emmet_install_global = 0
autocmd FileType html,css,eruby,eco EmmetInstall

" Align GitHub-flavored Markdown tables
au FileType markdown vmap <Leader><Bslash> :EasyAlign*<Bar><Enter>

" Color scheme
colorscheme github
highlight NonText guibg=#060606
highlight Folded  guibg=#0A0A0A guifg=#9090D0

" Allow project-specific `vimrc`s:
" http://andrew.stwrt.ca/posts/project-specific-vimrc/
set exrc

" Fold YAML files
au FileType yaml setlocal foldmethod=indent

" JavaScript
let g:javascript_plugin_flow = 1
let g:jsx_ext_required = 0

" Auto-format and lint on save, not on text changed
autocmd BufWritePre *.js Neoformat prettier
let g:ale_lint_on_text_changed = 'never'
