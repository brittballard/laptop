#!/usr/bin/env zsh

# Aliases
alias b="bundle"
alias flush-cache="sudo killall -HUP mDNSResponder"
alias m="rake db:migrate db:rollback && rake db:migrate db:test:prepare"
alias mkdir="mkdir -p"
alias path='echo $PATH | tr -s ":" "\n"'
alias restart-postgres="rm /usr/local/var/postgres/postmaster.pid; launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist; launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist"
alias v='vim'

# Clone a Git repo into Go-compatible directory structure.
# clone https://github.com/statusok/statusok
function clone() {
  host=$(echo "$1" | cut -d / -f 3)
  user=$(echo "$1" | cut -d / -f 4)
  repo=$(echo "$1" | cut -d / -f 5)

  cd "$GOPATH/src/$host" || exit
  mkdir -p "$user"
  cd "$user" || exit
  git clone "git@$host:$user/$repo".git
  cd "$repo" || exit
}

# Load .env file into shell session for environment variables
function envup() {
  if [ -f .env ]; then
    export "$(cat .env)"
  else
    echo 'No .env file found' 1>&2
    return 1
  fi
}

# g is a shortcut for git
function g() {
  if [[ $# -gt 0 ]]; then
    git "$@"
  else
    git status
  fi
}

# Create feature branch with conventional name: user/feature
function c() {
  if [[ $# -gt 0 ]]; then
    branch="$(whoami)/$1"
    git create-branch "$branch"
  else
    echo 'usage: c feature-name'
  fi
}

# Editor
export VISUAL=vim
export EDITOR=$VISUAL

# History
setopt hist_ignore_all_dups inc_append_history
HISTFILE=~/.zhistory
HISTSIZE=4096
SAVEHIST=4096

# fzf for finding files, ag for searching files
if [ -d /usr/local/opt/fzf/shell ]; then
  source "/usr/local/opt/fzf/shell/completion.zsh"
  source "/usr/local/opt/fzf/shell/key-bindings.zsh"
fi
export FZF_DEFAULT_COMMAND='ag --nocolor -g ""'

# Color
autoload -U colors
colors
export CLICOLOR=1

# Prompt
function git_prompt_info() {
  current_branch=$(git current-branch 2> /dev/null)
  if [[ -n $current_branch ]]; then
    echo " %{$fg_bold[green]%}$current_branch%{$reset_color%}"
  fi
}
setopt promptsubst

if ! env | grep -q '^PS1='; then
  PS1='%{$fg_bold[blue]%}%c%{$reset_color%}$(git_prompt_info) %# '
fi

# Completion
autoload -U compinit
compinit

# Configure Go
export GOPATH="$HOME"
PATH="$GOPATH/bin:$PATH"
PATH="/usr/local/go/bin:$PATH"

# https://github.com/golang/go/wiki/InvalidFlag
export CGO_LDFLAGS_ALLOW='-fstack-protector'

# Set environment variables for monorepos
export OK="$HOME/src/statusok"
export I10R="$HOME/src/i10r.io"
export ROOSTER="$HOME/src/rooster"

# Change into most common directories
export CDPATH="$CDPATH:$I10R:$OK:$ROOSTER:$GOPATH/src/github.com"

# Prepend monorepo scripts
PATH="$OK/bin:$PATH"
PATH="$I10R/bin:$PATH"
PATH="$ROOSTER/bin:$PATH"

# Prepend Homebrew binaries
PATH="/usr/local/bin:$PATH"

# Prepend programming language binaries via ASDF shims
PATH="$HOME/.asdf/bin:$PATH"
PATH="$HOME/.asdf/shims:$PATH"

# Prepend Android tools
PATH="$HOME/Library/Android/sdk/tools:$PATH"
PATH="$HOME/Library/Android/sdk/platform-tools:$PATH"

# mkdir .git/safe in trusted project to add binstubs
PATH=".git/safe/../../bin:$PATH"

export PATH
